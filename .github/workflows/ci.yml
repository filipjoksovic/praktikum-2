name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'
    
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Build with Maven
      run: mvn clean install
      
    - name: Setup Node.js environment
      uses: actions/setup-node@v2
      with:
        node-version: '18.12.1'
        
    - name: Get npm cache directory path
      id: npm-cache-dir-path
      run: echo "::set-output name=dir::$(npm config get cache)"

    - uses: actions/cache@v2
      id: npm-cache
      with:
        path: ${{ steps.npm-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-npm-
      
    - name: Install dependencies
      run: npm ci

    - name: Build React Native App
      run: npm run build
      
    - name: Build Android Release
      run: |
        cd android && ./gradlew assembleRelease

    - name: Upload Android APK
      uses: actions/upload-artifact@v2
      with:
        name: app-release.apk
        path: android/app/build/outputs/apk/release/
      
    - name: Build and push Docker images
      uses: docker/build-push-action@v4.0.0
      with: 
        image: nakupovalnilistek/nakupovalni-listek
        registry: docker.io
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

